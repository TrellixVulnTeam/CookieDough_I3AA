{"ast":null,"code":"var _jsxFileName = \"E:\\\\Study\\\\Cookie_Dough\\\\frontend\\\\cookie_dough\\\\src\\\\Components\\\\ErrorBoundary\\\\ErrorBoundary.js\";\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { setError } from '../../Redux/Reducers/GlobalData/ActionCreater';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ErrorBoundary extends Component {\n  // static getDerivedStateFromError(error) {\n  //   // Update state so the next render will show the fallback UI.\n  //   return { hasError: true, error};\n  // }\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    this.props.setError(error.message);\n    console.log(error, errorInfo);\n  }\n\n  render() {\n    if (this.props.errorMsg !== '') {\n      // You can render any custom fallback UI\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger text-center\",\n        role: \"alert\",\n        children: this.props.errorMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this);\n    }\n\n    return this.props.children;\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    errorMsg: state.globalData.errorMsg\n  };\n}\n\nexport default connect(mapStateToProps, {\n  setError\n})(ErrorBoundary);","map":{"version":3,"sources":["E:/Study/Cookie_Dough/frontend/cookie_dough/src/Components/ErrorBoundary/ErrorBoundary.js"],"names":["Component","connect","setError","ErrorBoundary","componentDidCatch","error","errorInfo","props","message","console","log","render","errorMsg","children","mapStateToProps","state","globalData"],"mappings":";AAAA,SAAQA,SAAR,QAAwB,OAAxB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,QAAR,QAAuB,+CAAvB;;;AAEA,MAAMC,aAAN,SAA4BH,SAA5B,CAAsC;AAElC;AACA;AACA;AACA;AAEAI,EAAAA,iBAAiB,CAACC,KAAD,EAAQC,SAAR,EAAmB;AAClC;AACA,SAAKC,KAAL,CAAWL,QAAX,CAAoBG,KAAK,CAACG,OAA1B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ,EAAmBC,SAAnB;AACD;;AAEDK,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKJ,KAAL,CAAWK,QAAX,KAAwB,EAA5B,EAAgC;AAC9B;AACA,0BACA;AAAK,QAAA,SAAS,EAAC,gCAAf;AAAgD,QAAA,IAAI,EAAC,OAArD;AAAA,kBACG,KAAKL,KAAL,CAAWK;AADd;AAAA;AAAA;AAAA;AAAA,cADA;AAID;;AACD,WAAO,KAAKL,KAAL,CAAWM,QAAlB;AACD;;AAtBiC;;AAyBpC,SAASC,eAAT,CAAyBC,KAAzB,EAA+B;AAC7B,SAAM;AACJH,IAAAA,QAAQ,EAAEG,KAAK,CAACC,UAAN,CAAiBJ;AADvB,GAAN;AAGD;;AAED,eAAeX,OAAO,CAACa,eAAD,EAAiB;AAACZ,EAAAA;AAAD,CAAjB,CAAP,CAAoCC,aAApC,CAAf","sourcesContent":["import {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {setError} from '../../Redux/Reducers/GlobalData/ActionCreater';\r\n\r\nclass ErrorBoundary extends Component {\r\n  \r\n    // static getDerivedStateFromError(error) {\r\n    //   // Update state so the next render will show the fallback UI.\r\n    //   return { hasError: true, error};\r\n    // }\r\n  \r\n    componentDidCatch(error, errorInfo) {\r\n      // You can also log the error to an error reporting service\r\n      this.props.setError(error.message)\r\n      console.log(error, errorInfo);\r\n    }\r\n  \r\n    render() {\r\n      if (this.props.errorMsg !== '') {\r\n        // You can render any custom fallback UI\r\n        return (\r\n        <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n          {this.props.errorMsg}\r\n        </div>);\r\n      }\r\n      return this.props.children;\r\n    }\r\n  }\r\n\r\n  function mapStateToProps(state){\r\n    return{\r\n      errorMsg: state.globalData.errorMsg\r\n    }\r\n  }\r\n\r\n  export default connect(mapStateToProps,{setError})(ErrorBoundary);"]},"metadata":{},"sourceType":"module"}