{"ast":null,"code":"var _jsxFileName = \"E:\\\\Study\\\\Cookie_Dough\\\\frontend\\\\cookie_dough\\\\src\\\\Cards\\\\Cards.js\",\n    _s = $RefreshSig$();\n\nimport './Cards.css';\nimport CookieCard from '../CookieCard/CookieCard';\nimport Loader from '../Components/Loader/Loader';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Cards(props) {\n  _s();\n\n  const getCookiesUrl = 'http://localhost:3001/cookie/getAll';\n  let [cookies, setCookies] = useState([]);\n  let [isShowLoader, setShowLoader] = useState(true);\n  useEffect(() => {\n    axios.get(getCookiesUrl, {\n      timeout: 5000\n    }).then(res => {\n      setCookies(res.data);\n      setShowLoader(false);\n    }).catch(e => {\n      console.log(e.message);\n      setShowLoader(false);\n    });\n  }, [props]);\n  let cookieCards = cookies.map(val => {\n    return /*#__PURE__*/_jsxDEV(CookieCard, {\n      cookieName: val.NAME,\n      description: val.DESCRIPTION,\n      price: val.PRICE_RS\n    }, val._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  });\n\n  if (isShowLoader) {\n    return /*#__PURE__*/_jsxDEV(Loader, {\n      coverScreen: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"div-cards\",\n      children: cookieCards\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(Cards, \"SKOdHghVtp5owrIPMPy6EfF+yMw=\");\n\n_c = Cards;\nexport default Cards;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"sources":["E:/Study/Cookie_Dough/frontend/cookie_dough/src/Cards/Cards.js"],"names":["CookieCard","Loader","axios","useState","useEffect","Cards","props","getCookiesUrl","cookies","setCookies","isShowLoader","setShowLoader","get","timeout","then","res","data","catch","e","console","log","message","cookieCards","map","val","NAME","DESCRIPTION","PRICE_RS","_id"],"mappings":";;;AAAA,OAAO,aAAP;AACA,OAAOA,UAAP,MAAuB,0BAAvB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAqB;AAAA;;AACjB,QAAMC,aAAa,GAAG,qCAAtB;AAEA,MAAI,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAApC;AACA,MAAI,CAACO,YAAD,EAAeC,aAAf,IAAgCR,QAAQ,CAAC,IAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACVF,IAAAA,KAAK,CAACU,GAAN,CAAUL,aAAV,EAAyB;AACrBM,MAAAA,OAAO,EAAE;AADY,KAAzB,EAGCC,IAHD,CAGOC,GAAD,IAAO;AACTN,MAAAA,UAAU,CAACM,GAAG,CAACC,IAAL,CAAV;AACAL,MAAAA,aAAa,CAAC,KAAD,CAAb;AACH,KAND,EAOCM,KAPD,CAOQC,CAAD,IAAK;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,OAAd;AACAV,MAAAA,aAAa,CAAC,KAAD,CAAb;AACH,KAVD;AAWH,GAZQ,EAYN,CAACL,KAAD,CAZM,CAAT;AAcA,MAAIgB,WAAW,GAAGd,OAAO,CAACe,GAAR,CAAaC,GAAD,IAAO;AACjC,wBACI,QAAC,UAAD;AAAY,MAAA,UAAU,EAAGA,GAAG,CAACC,IAA7B;AAAmC,MAAA,WAAW,EAAGD,GAAG,CAACE,WAArD;AAAkE,MAAA,KAAK,EAAGF,GAAG,CAACG;AAA9E,OAA8FH,GAAG,CAACI,GAAlG;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH,GAJiB,CAAlB;;AAMA,MAAGlB,YAAH,EAAgB;AACZ,wBACI,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAG;AAAtB;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH,GAJD,MAKI;AACA,wBACI;AAAK,MAAA,SAAS,EAAE,WAAhB;AAAA,gBACKY;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;AACJ;;GAtCQjB,K;;KAAAA,K;AAwCT,eAAeA,KAAf","sourcesContent":["import './Cards.css';\r\nimport CookieCard from '../CookieCard/CookieCard';\r\nimport Loader from '../Components/Loader/Loader';\r\nimport axios from 'axios';\r\n\r\nimport {useState, useEffect} from 'react';\r\n\r\nfunction Cards(props){\r\n    const getCookiesUrl = 'http://localhost:3001/cookie/getAll';\r\n\r\n    let [cookies, setCookies] = useState([]);\r\n    let [isShowLoader, setShowLoader] = useState(true);\r\n\r\n    useEffect(()=>{\r\n        axios.get(getCookiesUrl, {\r\n            timeout: 5000\r\n        })\r\n        .then((res)=>{\r\n            setCookies(res.data);\r\n            setShowLoader(false);\r\n        })\r\n        .catch((e)=>{\r\n            console.log(e.message);\r\n            setShowLoader(false);\r\n        });\r\n    }, [props]);\r\n\r\n    let cookieCards = cookies.map((val)=>{\r\n        return(\r\n            <CookieCard cookieName= {val.NAME} description= {val.DESCRIPTION} price= {val.PRICE_RS} key= {val._id}/>\r\n        );\r\n    });\r\n\r\n    if(isShowLoader){\r\n        return(\r\n            <Loader coverScreen= {false}/>\r\n        );\r\n    }\r\n    else{\r\n        return(\r\n            <div className= 'div-cards'>\r\n                {cookieCards}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Cards;"]},"metadata":{},"sourceType":"module"}